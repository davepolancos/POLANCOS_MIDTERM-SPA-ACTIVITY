{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Polancos_REACT_SPA\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const login = userData => {\n    setIsAuthenticated(true);\n    setUser(userData);\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUser(null);\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('user');\n  };\n\n  // Check for existing authentication on mount\n  React.useEffect(() => {\n    const storedAuth = localStorage.getItem('isAuthenticated');\n    const storedUser = localStorage.getItem('user');\n    if (storedAuth === 'true' && storedUser) {\n      setIsAuthenticated(true);\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","login","userData","localStorage","setItem","JSON","stringify","logout","removeItem","useEffect","storedAuth","getItem","storedUser","parse","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Polancos_REACT_SPA/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = (userData) => {\r\n    setIsAuthenticated(true);\r\n    setUser(userData);\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    localStorage.removeItem('isAuthenticated');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Check for existing authentication on mount\r\n  React.useEffect(() => {\r\n    const storedAuth = localStorage.getItem('isAuthenticated');\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedAuth === 'true' && storedUser) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMe,KAAK,GAAIC,QAAQ,IAAK;IAC1BJ,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAACE,QAAQ,CAAC;IACjBC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IAC/CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBT,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;IACbG,YAAY,CAACK,UAAU,CAAC,iBAAiB,CAAC;IAC1CL,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;;EAED;EACAzB,KAAK,CAAC0B,SAAS,CAAC,MAAM;IACpB,MAAMC,UAAU,GAAGP,YAAY,CAACQ,OAAO,CAAC,iBAAiB,CAAC;IAC1D,MAAMC,UAAU,GAAGT,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAID,UAAU,KAAK,MAAM,IAAIE,UAAU,EAAE;MACvCd,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAACK,IAAI,CAACQ,KAAK,CAACD,UAAU,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAG;IACZjB,eAAe;IACfE,IAAI;IACJE,KAAK;IACLM;EACF,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,GAAA,CAxCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}